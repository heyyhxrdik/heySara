{
  "version": 3,
  "sources": [
    "assets/heySara - Light.png",
    "assets/heySara_-_Dark.png",
    "components/AppHeader.js",
    "components/AppLoader.js",
    "components/AppUserDetails.js",
    "components/AppTime.js",
    "components/AppTimeContainer.js",
    "components/AppWeather.js",
    "components/AppWeatherContainer.js",
    "stacks/AppLists.js",
    "components/AppCopyright.js",
    "stacks/AppSidebar.js",
    "components/AppMic.js",
    "styles/Theme.js",
    "components/fire.js",
    "components/AppCommands.js",
    "components/AppSourceCode.js",
    "components/AppThemeToggler.js",
    "components/Login.js",
    "App.js",
    "reportWebVitals.js",
    "index.js"
  ],
  "names": [
    "AppHeader",
    "id",
    "src",
    "Icon",
    "alt",
    "AppLoader",
    "props",
    "className",
    "name",
    "AppUserDetials",
    "useState",
    "loaded",
    "setLoaded",
    "userPhoto",
    "onLoad",
    "userName",
    "AppTime",
    "time",
    "date",
    "AppTimeContainer",
    "setTime",
    "setDate",
    "loading",
    "setLoading",
    "days",
    "months",
    "Time",
    "a",
    "setInterval",
    "dateObj",
    "Date",
    "toLocaleTimeString",
    "getUTCDay",
    "getUTCDate",
    "getUTCMonth",
    "useEffect",
    "api",
    "AppWeather",
    "image",
    "Math",
    "floor",
    "temperature",
    "location",
    "country",
    "AppWeatherContainer",
    "latitude",
    "setLatitude",
    "longitude",
    "setLongitude",
    "setTemperature",
    "setLocation",
    "setCountry",
    "setImage",
    "navigator",
    "geolocation",
    "getCurrentPosition",
    "pos",
    "coords",
    "fetch",
    "then",
    "res",
    "json",
    "data",
    "main",
    "temp",
    "sys",
    "weather",
    "icon",
    "console",
    "log",
    "getWeather",
    "AppLists",
    "AppCopyright",
    "href",
    "AppSidebar",
    "type",
    "htmlFor",
    "photo",
    "AppMic",
    "transcript",
    "setup",
    "setSetup",
    "punchline",
    "setPunchLine",
    "recognition",
    "window",
    "SpeechRecognition",
    "webkitSpeechRecognition",
    "readOutLoud",
    "message",
    "responsiveVoice",
    "speak",
    "getJoke",
    "results",
    "onspeechend",
    "stop",
    "onresult",
    "event",
    "includes",
    "arr",
    "split",
    "splice",
    "query",
    "join",
    "open",
    "recipient",
    "prompt",
    "subject",
    "body",
    "song",
    "setTimeout",
    "onClick",
    "start",
    "fontSize",
    "lightTheme",
    "darkTheme",
    "fontColor",
    "borderColor",
    "GlobalStyles",
    "createGlobalStyle",
    "theme",
    "firebase",
    "initializeApp",
    "apiKey",
    "authDomain",
    "projectId",
    "storageBucket",
    "messagingSenderId",
    "appId",
    "measurementId",
    "AppCommands",
    "commands",
    "showCommands",
    "document",
    "getElementById",
    "style",
    "height",
    "AppSourceCode",
    "target",
    "AppThemeToggler",
    "setIcon",
    "toggled",
    "setToggled",
    "StyledApp",
    "styled",
    "div",
    "Login",
    "setTheme",
    "isLoggedIn",
    "setIsLoggedIn",
    "setName",
    "setPhoto",
    "auth",
    "onAuthStateChanged",
    "user",
    "displayName",
    "photoURL",
    "Image",
    "provider",
    "GoogleAuthProvider",
    "signInWithPopup",
    "catch",
    "error",
    "App",
    "reportWebVitals",
    "onPerfEntry",
    "Function",
    "getCLS",
    "getFID",
    "getFCP",
    "getLCP",
    "getTTFB",
    "ReactDOM",
    "render",
    "StrictMode"
  ],
  "mappings": "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",
  "file": "static/js/main.27171d79.chunk.js",
  "sourcesContent": [
    "export default __webpack_public_path__ + \"static/media/heySara - Light.d09dd685.png\";",
    "export default __webpack_public_path__ + \"static/media/heySara_-_Dark.76187aeb.png\";",
    "import React from 'react';\nimport Icon from '../assets/heySara_-_Dark.png';\nimport '../styles/AppHeader.css';\n\nconst AppHeader = () => {\n    return (\n        <header id=\"AppHeader\">\n            <img src={Icon} alt=\"Icon\" />\n        </header>\n    )\n}\n\nexport default AppHeader\n",
    "import React from 'react';\nimport '../styles/AppLoader.css';\n\nconst AppLoader = (props) => {\n    return (\n        <div className={props.name}></div>\n    )\n}\n\nexport default AppLoader\n",
    "import React, {useState} from 'react';\nimport '../styles/AppUserDetails.css';\nimport AppLoader from './AppLoader';\n\nconst AppUserDetials = (props) => {\n    const [loaded, setLoaded] = useState(false);\n\n    return (\n        <div className=\"userDetails\">\n            <img src={props.userPhoto} alt=\"Logo\" className={`image-${\n                loaded ? 'visible' : 'hidden'\n            }`}\n            onLoad={() => {setLoaded(true)}}\n            />\n            {\n                !loaded && (\n                    <AppLoader name=\"image-loader\"/>\n                )\n            }\n            <div className=\"userInfo\">\n                <h3>{props.userName}</h3>\n            </div>\n        </div>\n    )\n}\n\nexport default AppUserDetials\n",
    "import React from \"react\";\nimport \"../styles/AppTimeContainer.css\";\n\nconst AppTime = (props) => {\n  return (\n    <div id=\"time\">\n      <p id=\"crntTime\">{props.time}</p>\n      <p id=\"crntDate\">{props.date}</p>\n    </div>\n  );\n};\n\nexport default AppTime;\n",
    "import React, { useEffect, useState } from \"react\";\nimport \"../styles/AppTimeContainer.css\";\nimport AppTime from \"./AppTime\";\nimport AppLoader from \"./AppLoader\";\n\nconst AppTimeContainer = () => {\n  const [time, setTime] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const Time = async () => {\n     setInterval(() => {\n      let dateObj = new Date();\n      setTime(dateObj.toLocaleTimeString());\n      setDate(\n        days[dateObj.getUTCDay()] +\n          \" \" +\n          dateObj.getUTCDate() +\n          \" \" +\n          months[dateObj.getUTCMonth()]\n      );\n      setLoading(true);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    Time();\n  })\n\n  return (\n    <div>\n      {loading ? (\n        <AppTime date={date} time={time} />\n      ) : (\n        <AppLoader name=\"time-loader\"/>\n      )}\n    </div>\n  );\n};\n\nexport default AppTimeContainer;\n",
    "import React from \"react\";\nimport \"../styles/AppWeatherContainer.css\";\nconst api = {\n  key: \"628a98ea1de25d1e700cec0484b6a0bc\",\n  uri: \"https://openweathermap.org/img/wn/\",\n};\n\nconst AppWeather = (props) => {\n  return (\n    <div className=\"weather-container\">\n      <div className=\"widget-container\">\n        <div className=\"weather-icon\">\n          <img src={`${api.uri}${props.image}@2x.png`} alt=\"Logo\" />\n        </div>\n\n        <div className=\"temperature-value\">\n          <p>\n            {Math.floor(props.temperature)} °<span>C</span>\n          </p>\n        </div>\n      </div>\n\n      <div className=\"location\">\n        <p>\n          {props.location}, {props.country}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default AppWeather;\n",
    "import React, { useState, useEffect } from \"react\";\nimport \"../styles/AppWeatherContainer.css\";\nimport AppWeather from \"./AppWeather\";\n\nconst api = {\n  key: \"628a98ea1de25d1e700cec0484b6a0bc\",\n  uri: \"http://openweathermap.org/img/wn/\",\n};\n\nconst AppWeatherContainer = () => {\n  const [latitude, setLatitude] = useState(\"\");\n  const [longitude, setLongitude] = useState(\"\");\n  const [temperature, setTemperature] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n\n  const getPosition = () => {\n    navigator.geolocation.getCurrentPosition((pos) => {\n      setLatitude(pos.coords.latitude);\n      setLongitude(pos.coords.longitude);\n    });\n  };\n\n  useEffect(() => {\n    const getWeather = async () => {\n      try {\n        getPosition();\n        if (latitude && longitude) {\n          await fetch(\n            `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${api.key}`\n          )\n            .then((res) => res.json())\n            .then((data) => {\n              setTemperature(data.main.temp - 273);\n              setLocation(data.name);\n              setCountry(data.sys.country);\n              setImage(data.weather[0].icon);\n            });\n          setLoading(true);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    getWeather();\n  }, [latitude, longitude]);\n\n  return (\n    <div>\n      {loading ? (\n        <AppWeather\n          temperature={temperature}\n          location={location}\n          country={country}\n          image={image}\n        />\n      ) : (\n        null\n      )}\n    </div>\n  );\n};\n\nexport default AppWeatherContainer;",
    "import React from \"react\";\nimport AppTimeContainer from \"../components/AppTimeContainer\";\nimport \"../styles/AppLists.css\";\nimport AppWeatherContainer from \"../components/AppWeatherContainer\";\n\nconst AppLists = () => {\n  return (\n    <ul>\n      <li className=\"time-container\">\n        <AppTimeContainer />\n      </li>\n\n      <li>\n        <AppWeatherContainer />\n      </li>\n    </ul>\n  );\n};\n\nexport default AppLists;\n",
    "import React from 'react';\nimport '../styles/AppCopyright.css';\n\nconst AppCopyright = () => {\n    return (\n        <div className=\"copyright\">\n          <p>\n            <a\n              href=\"https://github.com/Pseudo-Pythonic/HeySara/blob/master/LICENSE\"\n              >Copyright</a\n            >\n            © 2021, HeySara\n          </p>\n        </div>\n    )\n}\n\nexport default AppCopyright\n",
    "import React from \"react\";\nimport AppHeader from \"../components/AppHeader\";\nimport AppUserDetials from \"../components/AppUserDetails\";\nimport AppLists from \"./AppLists\";\nimport \"../styles/AppSidebar.css\";\nimport AppCopyright from \"../components/AppCopyright\";\n\nconst AppSidebar = (props) => {\n  return (\n    <div className=\"main\">\n      <input type=\"checkbox\" id=\"check\" />\n      <label htmlFor=\"check\">\n        <i className=\"fas fa-bars\" id=\"open\"></i>\n        <i className=\"fas fa-times\" id=\"cancel\"></i>\n      </label>\n      <div className=\"sidebar\">\n        <AppHeader />\n        <AppUserDetials userName={props.name} userPhoto = {props.photo} />\n        <AppLists />\n        <AppCopyright />\n      </div>\n    </div>\n  );\n};\n\nexport default AppSidebar;\n",
    "import React, { useEffect, useState } from \"react\";\nimport MicNoneIcon from \"@material-ui/icons/MicNone\";\nimport \"../styles/AppMic.css\";\n\nconst AppMic = () => {\n  // variable for storing the speech of the user\n  var transcript;\n  const url =\n    \"https://guarded-castle-95476.herokuapp.com/https://official-joke-api.appspot.com/random_joke\";\n\n  // State Hooks for joke command\n  const [setup, setSetup] = useState(null);\n  const [punchline, setPunchLine] = useState(null);\n\n  const [search, setSearch] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n\n  // Speech Recognition\n  const SpeechRecognition =\n    window.SpeechRecognition || window.webkitSpeechRecognition;\n  const recognition = new SpeechRecognition();\n\n  // Function for text-to-speech\n  const readOutLoud = (message) => {\n    window.responsiveVoice.speak(message);\n  };\n\n  const getJoke = () => {\n    fetch(url)\n      .then((results) => {\n        return results.json();\n      })\n      .then((data) => {\n        setSetup(data.setup);\n        setPunchLine(data.punchline);\n      });\n  };\n  useEffect(() => {\n    getJoke();\n  }, []);\n\n  // all voice commands and their espective functions\n  const voiceCommands = () => {\n    // When the user's speech ends, this function gets called\n    recognition.onspeechend = function () {\n      recognition.stop();\n    };\n\n    // When the recognition is processed for results this function gets called\n    recognition.onresult = function (event) {\n      // The user's speech is stored in this variable\n      transcript = event.results[0][0].transcript;\n\n      // Voice commands\n      if (transcript.includes(\"search\")) {\n        if (transcript.includes(\"Wikipedia\")) {\n          let arr = transcript.split(\" \");\n          arr.splice(0, 3);\n          let query = arr.join(\" \");\n          readOutLoud(`Searching Wikipedia for ${query}`);\n          window.open(\n            `http://en.wikipedia.org/w/index.php?search=${query}`,\n            \"_blank\"\n          );\n        } else if (transcript.includes(\"Google\")) {\n          let arr = transcript.split(\" \");\n          arr.splice(0, 3);\n          let query = arr.join(\" \");\n          readOutLoud(`Searching Google for ${query}`);\n          window.open(`https://www.google.com/search?q=${query}`, \"_blank\");\n        } else {\n          let arr = transcript.split(\" \");\n          arr.splice(0, 2);\n          let query = arr.join(\" \");\n          readOutLoud(`Searching Google for ${query}`);\n          window.open(`https://www.google.com/search?q=${query}`, \"_blank\");\n        }\n      } else if (transcript.includes(\"browse\")) {\n        let arr = transcript.split(\" \");\n        arr.splice(0, 1);\n        let query = arr.join(\" \");\n        readOutLoud(`Searching YouTube for ${query}`);\n        window.open(\n          `http://www.youtube.com/results?search_query=${query}`,\n          \"_blank\"\n        );\n      } else if (transcript.includes(\"direction\")) {\n        let arr = transcript.split(\" \");\n        arr.splice(0, 2);\n        let query = arr.join(\" \");\n        readOutLoud(`Finding direction to ${query}`);\n        window.open(\n          `http://maps.google.com/maps/?q=directions to${query}`,\n          \"_blank\"\n        );\n      } else if (transcript.includes(\"weather\")) {\n        readOutLoud(\"Opening Weather App\")\n        window.open('https://weather-app-pseudopythonic.netlify.app/','_blank')\n      } else if (transcript.includes(\"new tab\")) {\n        window.open(\"https://www.google.com/\", \"_blank\");\n        readOutLoud(\"Opening a new Tab\");\n      } else if (\n        transcript.includes(\"compose\") ||\n        transcript.includes(\"mail\") ||\n        transcript.includes(\"email\")\n      ) {\n        let recipient = window.prompt(\"Enter the e-mail address of recipient\");\n        let subject = window.prompt(\"Enter the subject of the mail\");\n        let body = window.prompt(\"Enter the body of the mail\");\n        readOutLoud(`Composing mail to ${recipient}`);\n        window.open(\n          `mailto:${recipient}?subject=${subject}&body=${body}`,\n          \"_blank\"\n        );\n      } else if (transcript.includes(\"play\")) {\n        if (transcript.includes(\"music\")) {\n          let song = window.prompt(\n            \"Enter the name of the song you want to listen\"\n          );\n          readOutLoud(`Opening ${song} on JioSaavn`);\n          window.open(`https://www.jiosaavn.com/search/${song}`, \"_blank\");\n        } else {\n          let arr = transcript.split(\" \");\n          arr.splice(0, 1);\n          let query = arr.join(\" \");\n          readOutLoud(`Opening ${query} on JioSaavn`);\n          window.open(`https://www.jiosaavn.com/search/${query}`, \"_blank\");\n        }\n      } else if (setup && punchline) {\n        if (transcript.includes(\"joke\") || transcript.includes(\"jokes\")) {\n          getJoke();\n          readOutLoud(setup);\n          setTimeout(() => {\n            readOutLoud(punchline);\n          }, 4000);\n        }\n      } else {\n        readOutLoud(\"Can't reach to the server right now!\");\n      }\n    };\n  };\n\n  useEffect(() => {\n    voiceCommands();\n  });\n\n  return (\n    <div id=\"MicContainer\" className=\"parent\">\n      <button\n        onClick={() => {\n          recognition.start();\n        }}\n        type=\"button\"\n        className=\"mic\"\n      >\n        <MicNoneIcon fontSize=\"large\" className=\"micIcon\" />\n      </button>\n    </div>\n  );\n};\n\nexport default AppMic;\n",
    "import { createGlobalStyle } from \"styled-components\";\n\nexport const lightTheme = {\n  body: \"#fff\",\n};\n\nexport const darkTheme = {\n  body: \"#333551\",\n  fontColor: \"#fff\",\n  borderColor: '#fff',\n};\n\nexport const GlobalStyles = createGlobalStyle`\n\n    body{\n        background: ${(props) => props.theme.body};\n        transition: background 1s;\n    }\n\n    svg.MuiSvgIcon-root{\n        transition: 0.6s ease;\n        color: ${(props) => props.theme.fontColor}\n    }\n\n    i#open{\n        color: ${(props) => props.theme.fontColor}\n    }\n\n    button.toggler{\n      border-color: ${(props) => props.theme.borderColor}\n    }\n\n`;\n",
    "import firebase from \"firebase\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCMEKbv_uZI0fNxTIg3TTIwh4jg-koF938\",\n  authDomain: \"react-heysara.firebaseapp.com\",\n  projectId: \"react-heysara\",\n  storageBucket: \"react-heysara.appspot.com\",\n  messagingSenderId: \"587439991090\",\n  appId: \"1:587439991090:web:01443970ee312479d58f2b\",\n  measurementId: \"G-JXYML39XMF\",\n}\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n",
    "import React, { useState } from \"react\";\nimport \"../styles/App.css\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\n\nconst AppCommands = () => {\n  const [commands, showCommands] = useState(false);\n\n  return (\n    <div className=\"command-container\">\n      <button\n        className=\"showCommand\"\n        onClick={() => {\n          if (!commands) {\n            showCommands(true);\n            document.getElementById(\"myNav\").style.height = '100%';\n            console.log(\"Opened\");\n            return;\n          }\n        }}\n      >\n        <InfoIcon />\n      </button>\n        <>\n          <div id=\"myNav\" className=\"overlay\">\n            <CancelIcon\n              className=\"closebtn\"\n              onClick={() => {\n                showCommands(false);\n                document.getElementById(\"myNav\").style.height = '0%';\n              }}\n            />\n            <ul className=\"overlay-content\">\n              <h5>Commands for Sara</h5>\n              <li>\n                Search Wikipedia for (YOUR COMMAND): Searches your query and\n                redirects to Wikipedia\n              </li>\n              <li>\n                Search Google for (YOUR COMMAND) / Search for (YOUR COMMAND):\n                Searches your query on Google\n              </li>\n              <li>\n                Browse (CHANNEL NAME / QUERY): Searches your query on YouTube\n              </li>\n              <li>\n                Direction to (QUERY): Fetches you the directions to the query\n              </li>\n              <li>\n                Weather : Gets you to the weather app and there you can search for your preferred city!\n              </li>\n              <li>\n                Compose / Compose Email/ Mail: Gets the recipient, body and\n                subject from the user and autofills them in the composed mail!\n                Just the user needs to send it!\n                <br />\n                <code>\n                  For PC Users: Please enable Mail as the default app for mails\n                  for the working of this command. For android users enable\n                  Pop-ups to always show for working of this command!\n                </code>\n              </li>\n              <li>\n                {\" \"}\n                Play Music ( if you want to type the name of the song you want\n                to play) / Play (Song Name) : For searching the song you want to\n                play!\n              </li>\n              <li>Crack some Jokes: Tells you a random joke line!</li>\n              <li>Note: Sara will not respond if you command her wrong!</li>\n              <li>Note: Enable location, microphone and pop-up permissions for the better functioning of Sara!</li>\n            </ul>\n          </div>\n        </>\n    </div>\n  );\n};\n\nexport default AppCommands;\n",
    "import React from \"react\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport  '../styles/AppSourceCode.css';\n\nconst AppSourceCode = () => {\n  return (\n    <div id=\"sourceCode\">\n      <a href=\"https://github.com/Pseudo-Pythonic/HeySara\" target='_blank'>\n        <GitHubIcon />\n      </a>\n    </div>\n  );\n};\n\nexport default AppSourceCode;\n",
    "import React, { useState } from \"react\";\nimport \"../styles/AppThemeToggler.css\";\nimport Brightness5Icon from \"@material-ui/icons/Brightness5\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport AppCommands from \"./AppCommands\";\nimport AppSourceCode from \"./AppSourceCode\";\n\nconst AppThemeToggler = (props) => {\n  const [icon, setIcon] = useState(<Brightness3Icon />);\n  const [toggled, setToggled] = useState(false);\n\n  return (\n    <div id=\"main\">\n      <AppSourceCode />\n      <AppCommands />\n      <button\n        className=\"toggler\"\n        type=\"button\"\n        onClick={() => {\n          {\n            props.theme();\n          }\n          if (!toggled) {\n            setToggled(true);\n            setIcon(<Brightness5Icon />);\n            return;\n          }\n          if (toggled) {\n            setToggled(false);\n            setIcon(<Brightness3Icon />);\n            return;\n          }\n        }}\n      >\n        {icon}\n      </button>\n    </div>\n  );\n};\n\nexport default AppThemeToggler;\n",
    "import React, { useState, useEffect } from \"react\";\nimport Image from \"../assets/heySara - Light.png\";\nimport \"../styles/App.css\";\nimport AppSidebar from \"../stacks/AppSidebar\";\nimport AppMic from \"./AppMic\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport \"../styles/Login.css\";\nimport { lightTheme, darkTheme, GlobalStyles } from \"../styles/Theme\";\nimport firebase from \"./fire\";\nimport AppThemeToggler from \"./AppThemeToggler\";\n\nconst StyledApp = styled.div``;\n\nconst Login = () => {\n  const [theme, setTheme] = useState(\"light\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [photo, setPhoto] = useState(\"\");\n\n  const themeToggler = () => {\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n  };\n\n  const login = () => {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      setName(user.displayName);\n      setPhoto(user.photoURL);\n      setIsLoggedIn(true);\n    });\n  }, [setIsLoggedIn]);\n\n  return (\n    <div>\n      {isLoggedIn === false ? (\n        <div className=\"LoginContainer\">\n          <img src={Image} alt=\"AuthLogo\" />\n          <button onClick={login} className=\"SignIn\"> \n            Sign In with Google\n          </button>\n        </div>\n      ) : (\n        <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n          <GlobalStyles />\n          <StyledApp>\n            <AppSidebar name={name} photo={photo} />\n            <AppThemeToggler theme={themeToggler} />\n            <AppMic />\n          </StyledApp>\n        </ThemeProvider>\n      )}\n    </div>\n  );\n};\n\nexport default Login;\n",
    "import Login from \"../src/components/Login\";\n\nfunction App() {\n  return <Login />;\n}\n\nexport default App;\n",
    "const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"
  ],
  "sourceRoot": ""
}
